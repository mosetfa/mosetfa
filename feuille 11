summary(mostefa)
sd(mostefa)
base<-read.csv2("C:/Users/moste/OneDrive/Bureau/amel.csv", h
                eader=TRUE, check.names = FALSE, row.names = "SPECIES")
base<-read.csv2("C:/Users/moste/OneDrive/Bureau/DIAGRAM.csv", row.names="Nom", header=TRUE, check.names = FALSE)
print(base)
CA (base, ncp = 5, graph = TRUE)
mm <- as.table(as.matrix (base))
balloonplot(t (mm), main = "base", xlab = "", ylab = "",
            label = FALSE, show.margins = FALSE)      
chisq<- chisq.test (base)
CA (base, ncp = 5, graph = TRUE)
get_eigenvalue(base)
library ("FactoMineR")
af<- CA (base, graph = FALSE)
print(af)
get_eigenvalue(af)
fviz_eig(af)                
get_ca_row(af)
get_ca_col(af)
fviz_ca_biplot (af)
summary (af)
fviz_ca_col (af, col.row = "cos2",
             gradient.cols = c ("#00AFBB", "#E7B800", "#FC4E07"),
             repel = TRUE)
fviz_ca_col (af, col.col = "cos2",
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
             repel = TRUE)
fviz_ca_biplot(af, repel = TRUE)


dim(base)
library(vegan)
spe_hellinger <- decostand(matrice_especes, method = "hellinger")
matrice_especes<-spe_hellinger

dim(base)
colonnes_especes <- colnames(base)[1:22]
matrice_especes <- base[, colonnes_especes]
matrice_especes
colonnes_especes <- colnames(base)[2:35]
matrice_especes <- base[, colonnes_especes]
nmds <- vegdist(matrice_especes, method="bray")
nmds <- metaMDS(matrice_especes)
nmds <- metaMDS(matrice_especes, distance = "bray")
print(nmds)
stressplot(nmds)
ordiplot(nmds, type = "t")
ordiplot(nmds, display = "sites", type = "text")

base_especes <- matrice_especes
parametres <- data.frame(
  land_use = c("agriculture", "agriculture", "prairie", "semi-urbaine", "semi-urbaine", "foret", "foret", "foret", "agriculture", "foret", "prairie", "semi-urbaine", "foret"),
  water_depth = c(2, 2, 3, 4, 1, 1, 1, 2, 1, 5, 2, 2, 2),
  water_velocity = c(20, 24, 25, 23, 13, 24, 23, 43, 23, 24, 32, 11, 11)
)
parametres <- data.frame(
  breed <- c("B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1", "B1",
             "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2", "B2"),  
  age <- c(
    "B1:Y/sb", "B1:Y/sb", "B1:Y/sb", "B1:Y/sb", "B1:Y/sb", "B1:Y/sb", "B1:Y/sb",
    "B1:Y/sb", "B1:Y/sb", "B1:Y/sb", "B1:Y/sb", "B1:Y/sb", "B1:Y/sb", "B1:Y/sb",
    "B1:A/O", "B1:A/O", "B1:A/O", "B1:A/O", "B1:A/O", "B1:A/O", "B1:A/O",
    "B1:A/O", "B1:A/O", "B1:A/O", "B1:A/O", "B1:A/O", "B1:A/O", "B1:A/O",
    "B1:A/O", "B1:A/O", "B2:Y/SA", "B2:Y/SA", "B2:Y/SA", "B2:Y/SA", "B2:Y/SA", "B2:Y/SA",
    "B2:Y/SA", "B2:Y/SA", "B2:Y/SA", "B2:Y/SA", "B2:Y/SA", "B2:Y/SA", "B2:Y/SA",
    "B2:Y/SA", "B2:A/O", "B2:A/O", "B2:A/O", "B2:A/O", "B2:A/O", "B2:A/O",
    "B2:A/O", "B2:A/O", "B2:A/O", "B2:A/O", "B2:A/O", "B2:A/O", "B2:A/O",
    "B2:A/O", "B2:A/O", "B2:A/O"
  ))
base_combinees <- cbind(base_especes, parametres)

base_especes <- data.frame(
  x = nmds$points[, 1],
  y = nmds$points[, 2],
  brees = parametres$breed,
  age = parametres$age
)

df_sites <- data.frame(
  x = nmds$points[, 1],
  y = nmds$points[, 2],
  land_use = parametres$land_use,
  water_depth = parametres$water_depth,
  water_velocity = parametres$water_velocity
)

ggplot() +
    geom_point(data = base_combinees, aes(x = x, y = y, shape = age, color = breed)) +
  scale_shape_manual(values = c(16, 17, 18, 19)) +
  scale_color_gradient(low = "blue", high = "red") +
  theme_bw()
ggplot() +
  geom_point(data = species, aes(x = x, y = y, shape = land_use, size = water_depth, color = water_velocity)) +
  scale_shape_manual(values = c(16, 17, 18, 15)) +
  scale_size_continuous(range = c(3, 10)) +
  scale_color_gradient(low = "blue", high = "red") +
  labs(x = "NMDS1", y = "NMDS2") +
  theme_bw()

ggplot() +
  geom_point(data = df_sites, aes(x = x, y = y, shape = land_use, size = water_depth, color = water_velocity)) +
  scale_shape_manual(values = c(16, 17, 18, 19)) +
  scale_size_continuous(range = c(3, 10)) +
  scale_color_gradient(low = "blue", high = "red") +
  labs(x = "NMDS1", y = "NMDS2") +
  theme_bw()

library(vegan)

# Exemple d'analyse NMDS
nmds_result <- metaMDS(dist_matrix)

# Extraction de la valeur de permutation
permutation_value <- nmds_result$perm

# Affichage de la valeur de permutation
print(permutation_value)

base_combinees <- cbind(base_especes, parametres)
df_sites <- data.frame(
  x = nmds$points[, 1],
  y = nmds$points[, 2],
  land_use = base_combinees$land_use,
  water_depth = base_combinees$water_depth,
  water_velocity = base_combinees$water_velocity
)







# Effectuer l'analyse NMDS
nmds <- metaMDS(matrice_especes)

# Effectuer l'analyse envfit avec les paramètres supplémentaires
envfit_breed <- envfit(nmds, parametres$breed)
envfit_water_depth <- envfit(nmds, parametres$water_depth)
envfit_water_velocity <- envfit(nmds, parametres$water_velocity)

p <- ggplot() +
  geom_point(data = as.data.frame(nmds$points), aes(x = NMDS1, y = NMDS2)) +
  geom_text(data = as.data.frame(nmds$species), aes(x = NMDS1, y = NMDS2, label = rownames(nmds$species)), size = 3) +
  geom_segment(data = as.data.frame(envfit_water_depth$envfit), aes(x = 0, y = 0, xend = NMDS1 * vect, yend = NMDS2 * vect, color = rownames(envfit_water_depth$envfit))) +
  geom_segment(data = as.data.frame(envfit_water_velocity$envfit), aes(x = 0, y = 0, xend = NMDS1 * vect, yend = NMDS2 * vect, color = rownames(envfit_water_velocity$envfit))) +
  scale_color_manual(values = c("land_use" = "red", "water_depth" = "blue", "water_velocity" = "green")) +
  theme_minimal()

print(p)

sp <-ggplot() +
  geom_point(data = df_sites, aes(x = x, y = y, shape = land_use, size = depth, color = debit)) +
  scale_shape_manual(values = c(16, 17, 18, 19)) +
  scale_size_continuous(range = c(3, 10)) +
  scale_color_gradient(low = "blue", high = "red") +
  labs(x = "NMDS1", y = "NMDS2") +
  theme_bw()
sp + geom_density_2d()
base <- read.csv2("C:/Users/moste/OneDrive/Bureau/NMDS.csv")
print(base)
library(vegan)
colonnes_especes <- colnames(base)[2:13]
matrice_especes <- base[, colonnes_especes]
nmds <- metaMDS(matrice_especes)
print(nmds)
surf_latitude <- ordisurf(nmds, debit, display = "sites", col = "blue")
print(surf_altitude)
# Plot NMDS
plot(nmds, type = "n")  # Create an empty plot
points(nmds, display = "sites")  # Add points for sites
text(nmds, display = "sites", labels = round(nmds$stress, 2), pos = 3)  # Add stress values as text
protection <- data.frame(
  region = c("Non-protégé", "Semi-protégé", "Semi-protégé", "Non-protégé", "Semi-protégé", "Non-protégé", "Non-protégé", "Non-protégé", "Non-protégé"))

surf_protection <- ordisurf(nmds, protection$protection, display = "sites")
plot(surf_latitude)
print(NMDS)
# Add the surface plot
plot(surf_latitudes, add = TRUE)
surf_protection <- ordisurf(nmds, parametres_supplementaires $profondeur, display = "sites")
ordiplot(nmds, display = "sites", type = "text")
# Vecteur pour la variable d'altitude
protection <- c("Non-protégé", "Semi-protégé", "Semi-protégé", "Non-protégé", "Semi-protégé", "Non-protégé", "Non-protégé", "Non-protégé", "Non-protégé", "protégé", "protégé", "protégé")
niveau_eau <- c(4.52, 2.23, 1.91, 1.25, 0.52, 0.45, 1.47, 1.31, 0.42, 1, 4, 1)
debit <- c(23, 13, 24, 23, 43, 23, 24, 32, 11, 12, 23, 23)
longitude <- c(7.12076944, 7.11910833, 7.11826389, 7.12460278, 7.131, 7.11289722, 7.11733056, 7.11853611, 7.04841667, 7.13352222)
latitude <- c(35.84552222, 35.80698332, 35.805775, 35.79645, 35.79603056, 35.76509722, 35.74034444, 35.74185, 35.72986667, 35.79921667)
profondeur <- c(16.91, 13.41, 10.3, 7.36, 9.88, 11, 20.33, 28, 4.76, 789, 877, 888)
surf_longitude <- ordisurf(nmds, longitude, display = "sites")
surf_latitude <- ordisurf(nmds, latitude, display = "sites")
ordisurf(sol, base1$Latitude, plot = FALSE, bs = "ds", k = 2)

fit <- ordisurf(vare.mds ~ niveau_eau, base1, family=quasipoisson)
surf_altitudes <- ordisurf(nmds, altitudes, display = "sites", col = "green")
surf_niveau_eau <- ordisurf(nmds, niveau_eau, display = "sites")
# Ajuster une surface lisse pour la variable d'altitude
surf_profondeur <- ordisurf(nmds, profondeur, display = "sites", col="blue")
profondeur <- c(16.91, 13.41, 10.3, 7.36, 9.88, 11, 20.33, 28, 4.76)

# Add depth values to the nmds object
nmds$Depth <- profondeur

# Create the NMDS plot with depth values using ordiplot
ordiplot(nmds, display = "sites", type = "n")  # Create an empty plot
points(nmds, display = "sites", pch = 16, col = "blue")  # Add NMDS points
ordiellipse(nmds, display = "sites", conf = 0.95, col = "grey")  # Add ellipses
orditorp(nmds, display = "sites", text.col = "black", cex = 0.8)  # Add point labels
ordiplot(nmds, display = "species", type = "n")  # Create an empty plot for species
points(nmds, display = "species", pch = 1, col = "red")  # Add species points
orditorp(nmds, display = "species", text.col = "black", cex = 0.8)  # Add species labels

# Add depth values as contour lines
contour(nmds
        
# Afficher le diagramme d'ordination avec la surface lisse
ordiplot(nmds, display = "sites", type = "text")
points(surf_altitude, pch = 16, col = "blue")
print(nmds)

latitude <- c(35.84, 35.80, 35.80, 35.79, 35.79, 35.76, 35.74, 35.74, 35.72, 35.81, 35.78, 35.77, 35.75)
# Ajuster une surface lisse pour la variable de latitude
surf_latitude <- ordisurf(nmds, latitude, display = "sites")
surf_latitude <- ordisurf(nmds, latitude, display = "sites", col = "green")

# Afficher la surface lisse
plot(surf_latitude)
# Ajouter une légende
legend("bottomright", legend = "Altitude", pch = 16, col = "blue", title = "Variable")

# Calculer le stress pour K=2
stress <- anova(nmds, k=2)$tot.chi
# Charger la bibliothèque vegan
library(vegan)

# Effectuer une NMDS
nmds <- metaMDS(comm = matrice_especes)

# Vecteur pour la variable de latitude
latitude <- c(35, 36, 35, 37, 39, 38, 35, 35, 35)

# Ajuster une surface lisse pour la variable de latitude
surf_latitude <- ordisurf(nmds, latitude, display = "sites")

# Afficher la NMDS avec les courbes de niveau de la latitude
plot(nmds)
points(surf_latitude, col = "red")
contour(surf_latitude, add = TRUE)

# Afficher le stress
text(x = max(nmds$points[, 1]), y = max(nmds$points[, 2]), paste("Stress =", round(stress, 2)), pos = 2)
scores(fit, "vectors")
library(MASS)
ord <- metaMDS(varespec)
data <- data.frame(
  Site = 1:12,
  ESP1 = c(12, 29, 32, 14, 4, 4, 1, 3, 122, 2, 43, 134),
  ESP2 = c(23, 12, 23, 15, 7, 46, 3, 2, 100, 3, 344, 133),
  ESP3 = c(4, 7, 12, 13, 3, 43, 3, 12, 35, 23, 345, 43),
  ESP4 = c(2, 5, 2, 8, 2, 9, 3, 8, 45, 4, 43, 345),
  ESP5 = c(9, 2, 8, 1, 7, 4, 0, 3, 34, 4, 34, 324),
  ESP6 = c(1, 7, 4, 2, 34, 12, 23, 24, 23, 342, 34, 34),
  ESP7 = c(2, 3, 2, 1, 34, 23, 23, 12, 23, 234, 4, 1),
  ESP8 = c(0, 3, 2, 4, 12, 13, 32, 23, 34, 544, 34, 2),
  ESP9 = c(23, 34, 12, 234, 53, 315, 575, 23, 324, 45, 243, 34),
  ESP10 = c(34, 3, 2, 1, 3, 1, 3, 5, 35, 67, 78, 3),
  ESP11 = c(556, 234, 435, 432, 55, 22, 33, 34, 345, 23, 199, 26),
  ESP12 = c(12, 12, 23, 43, 45, 65, 67, 43, 23, 3, 23, 1),
  ESP13 = c(12, 34, 32, 43, 16, 15, 14, 13, 23, 12, 45, 23),
  ESP14 = c(1, 1, 3, 1, 5, 5, 4, 4, 3, 5, 2, 1)
)
library(vegan)

# Perform NMDS analysis
nmds_result <- metaMDS(dist_matrix)

# Extract permutation results
perm_results <- permustats(nmds_result)
scores(fit, "vectors")


# Access specific permutation values
permutation_value <- perm_results$perm
base_combinees <- cbind(base_especes, parametres)
(fit <- envfit(ord, base_combinees, perm = 999))
(fit <- envfit(ord, parametres, perm = 999))
(fit <- envfit(ord, base_especes, perm = 999))
scores(fit, "vectors")
plot(parametres)
plot(parametres)
plot(parametres, p.max = 0.05, col = "red")
ord <- metaMDS(parametres)
(fit <- envfit(ord, base, perm = 999))
# Load required packages
library(vegan)

# Create a data frame with the species abundance data
species_data <- data.frame(
  Niphargiidae = c(0, 282, 45, 0, 0, 0, 0, 0, 0),
  Gammaridae = c(0, 0, 0, 74, 0, 0, 13, 0, 0),
  Daph = c(0, 0, 0, 5, 48, 0, 0, 0, 0),
  Cypr = c(0, 0, 0, 21, 0, 0, 0, 0, 0),
  Cyclo = c(141, 0, 22, 1063, 218, 0, 0, 0, 0),
  Halic = c(4, 0, 0, 12, 24, 0, 0, 0, 0),
  Bae = c(0, 0, 0, 2, 0, 0, 0, 0, 0),
  Ame = c(0, 0, 0, 1, 0, 0, 0, 0, 0),
  Coc = c(0, 0, 0, 1, 0, 0, 0, 1, 0),
  Hydro = c(0, 0, 0, 0, 0, 0, 0, 2, 0),
  Nat = c(0, 0, 0, 0, 0, 2, 1, 0, 0),
  Culi = c(0, 0, 1, 0, 134, 184, 276, 158, 613),
  Chab = c(0, 0, 0, 0, 0, 8, 36, 35, 2),
  Chir = c(0, 0, 0, 2, 8, 53, 3, 0, 0),
  Noto = c(0, 0, 0, 2, 0, 0, 0, 0, 0),
  Nep = c(0, 0, 0, 0, 0, 2, 0, 0, 0),
  Ento = c(0, 0, 0, 0, 0, 0, 0, 1, 0),
  Hydra = c(1, 0, 0, 0, 0, 0, 0, 4, 0),
  Hydrob = c(0, 0, 0, 11, 0, 0, 0, 0, 0),
  Plan = c(0, 0, 0, 0, 0, 0, 0, 1, 0)
)

# Extract the latitude values
latitude <- c(35.84, 35.80, 35.80, 35.79, 35.79, 35.76, 35.74, 35.74, 35.72)

# Perform NMDS
nmds <- metaMDS(species_data)

# Create the surface plot
surf_latitude <- ordisurf(nmds, latitude, display = "sites")

# Plot the surface
plot(surf_latitude)
# Reduce the maximum degrees of freedom (df)
surf_latitude <- ordisurf(nmds, latitude, display = "sites", df = 3)

# Plot the surface
plot(surf_latitude)
model <- lm(PO43 ~ NO3, data = base)
summary(model)$coef
newdata <- data.frame(Ca = c(0,  100))
model %>% predict(newdata)
model <- lm(Mg ~ Ca + Cl + HCO3, 
            data = base)
summary(model)$coef
ggplot(base, aes(x = Mg, y = Ca)) +
  geom_point() +
  stat_smooth()

