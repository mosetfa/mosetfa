print(base)
summary(base)
pairs(base[,1:2]) 
x <- base$ph
y <- base$CONDUCTIVITE 
plot(x, y, main = "Main title",
     xlab = "ph", ylab = "CONDUCTIVITE",
     pch = 19, frame = FALSE)

plot(x, y, main = "Régression linéaire",
     xlab = "POTASIUM en mg/l", ylab = "CONDUCTIVITE electrique",
     pch = 19, frame = FALSE)
abline(lm(y ~ x, data = base), col = "blue")




plot(x, y, main = "Régression linéaire",
     xlab = "POTASIUM", ylab = "CONDUCTIVITE",
     pch = 19, frame = FALSE)
lines(lowess(x, y), col = "blue")
library("car")
scatterplot(CONDUCTIVITE ~ POTASIUM, data = base)
scatterplot(CONDUCTIVITE ~ POTASIUM, data = base, 
            smoother = FALSE, grid = FALSE, frame = FALSE)
scatterplot(TDS ~ Sulfate | oued, data = base, 
            pch = 19, frame = FALSE)+lines(lowess(x, y), col = "blue")
pairs(base[,1:10], pch = 19)
my_cols <- c("#00AFBB", "#E7B800", "#FC4E07")  
pairs(base[,1:10], pch = 19,  cex = 0.5,
      col = my_cols[iris$oued],
      lower.panel=NULL)
library(psych)
pairs.panels(base[,1:12], 
             method = "pearson", 
             hist.col = "#00AFBB",
             density = TRUE,  
             ellipses = TRUE )

mm <- as.table(as.matrix (base))
balloonplot(t (mm), main = "base", xlab = "", ylab = "",
            label = FALSE, show.margins = FALSE)
chisq<- chisq.test (base)
CA (base, ncp = 5, graph = TRUE)
get_eigenvalue(base)
library ("FactoMineR")
af<- CA (base, graph = FALSE)
print(af)
get_eigenvalue(af)
fviz_eig(af)                
get_ca_row(af)
get_ca_col(af)
fviz_ca_biplot (af)
fviz_ca_biplot(af, repel = TRUE)
fviz_ca_row (af)
fviz_ca_col (af)
summary (af)
fviz_ca_row (af, col.col = "cos2",
             gradient.cols = c ("#00AFBB", "#E7B800", "#FC4E07"),
             repel = TRUE)
col <- get_ca_col(res.ca)
col
res.ca <- CA (base, graph = FALSE)

# Coordonnées
head(col$coord)
# Qualité de représentation
head(col$cos2)
# Contributions
head(col$contrib)
fviz_ca_row(res.ca)
fviz_ca_col(res.ca)
fviz_ca_col (res.ca, col.col = "cos2",
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
             repel = TRUE)
eig.val <- get_eigenvalue (res.ca)
eig.val
res.ca <- CA (base, graph = FALSE)
CA (base, ncp = 5, graph = TRUE)
dim(base)
col <- get_ca_col(res.ca)
col
df, lower.tail = FALSE)
print(base)
summary(base)
pairs(base[,1:9])
matrice.corr<-cor(base[1:9])
matrice.corr
library(corrplot)
corrplot(matrice.corr, method="circle")
corrplot(matrice.corr, type="upper", order="hclust", tl.col="black", tl.srt=75)
corrplot(matrice.corr, type="upper", order="hclust")
install.packages(c("FactoMineR", "factoextra"))
(C:\Users\TOSHIBA\AppData\Local\Temp\Rtmpea4t0q\downloaded_packages)
Changer la couleur
col<- colorRampPalette(c("red", "white", "blue"))(20)
corrplot(matrice.corr, type="upper", order="hclust", col=col)
corrplot(matrice.corr, type="upper", order="hclust", col=c("black", "white"),
         bg="lightblue")


corrplot(matrice.corr, type="upper", order="hclust", tl.col="black", tl.srt=45)

library(PerformanceAnalytics)
base <- matrice.corr[, c(1,3,4,5,6,7)]
chart.Correlation(base, histogram=TRUE, pch=19)
jhv

corrplot(matrice.corr, method="pie")
corrplot(matrice.corr, method="color")
corrplot(matrice.corr, method="number")
corrplot(base, type="upper", order="hclust", tl.col="black", tl.srt=45)

chart.Correlation(matrice.corr, histogram=TRUE, pch=19)
corrplot(base, type="upper", order="hclust")
install.packages(c("FactoMineR", "factoextra"))
(C:\Users\TOSHIBA\AppData\Local\Temp\Rtmpea4t0q\downloaded_packages)
Changer la couleur
col<- colorRampPalette(c("red", "white", "blue"))(20)
corrplot(matrice.corr, type="upper", order="hclust", col=col, method="number")
corrplot(matrice.corr, type="upper")
corrplot(matrice.corr, type="upper", order="hclust", col=c("black", "white"),
         bg="lightblue")

CA (base, ncp = 5, graph = TRUE)
mm <- as.table(as.matrix (base))
balloonplot(t (mm), main = "balloonplot", xlab = "ESPECES", ylab = "STATIONS",
            label = FALSE, show.margins = FALSE)
balloonplot(data, main = "balloonplot", xlab = "les espèces", ylab = "les stations",
            label = TRUE/FALSE, show.margins = TRUE/FALSE)
chisq<- chisq.test (base)
CA (base, ncp = 5, graph = TRUE)
get_eigenvalue(base)
library ("FactoMineR")
af<- CA (base, graph = FALSE)
print(af)
get_eigenvalue(af)
fviz_eig(af)                
get_ca_row(af)
get_ca_col(af)
fviz_ca_biplot (af)
summary (af)
fviz_ca_row (af, col.row = "cos2",
             gradient.cols = c ("#00AFBB", "#E7B800", "#FC4E07"),
             repel = TRUE)
fviz_ca_col (af, col.col = "cos2",
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
             repel = TRUE)
fviz_ca_biplot(af, repel = TRUE)

PCA(base,scale.unit = TRUE, ncp=5, graph = TRUE)
dimdesc(base)
dim(base)
print(base)
head(base)
str(base)
fix(base)
decathlon2.active <- base1[1:5, 1:24]
head(decathlon2.active[, 1:24], 5)  
valeur.propre<- get_eigenvalue(res.pca)
PCA(decathlon2.active, scale.unit = TRUE, ncp = 5, graph = TRUE)
summary(decathlon2.active)
res.pca <- PCA(base, graph = FALSE)
col <- get_ca_col(res.ca)
col
# Coordonnées
head(col$coord)
# Qualité de représentation
head(col$cos2)
# Contributions
head(col$contrib)
fviz_ca_col (res.ca)
print(base)

tree<-agnes(base,diss = FALSE,stand = FALSE)
pltree(tree)
rect.hclust(tree,k=5)
pltree(tree,hang=-1)
clu<-pam(base,k=3,diss = FALSE,stand = FALSE)
clusplot(clu,labels=3,lines=0,col.p=clu$clustering)
plot(silhouette(clu))
plot(silhouette(clu))
for (i in 2:8) {clu<-pam(base,k=i,diss=FALSE,stand = FALSE);print(i);print(clu$silinfo[3]);}
clu$medoids







print(res.pca)
eig.val <- get_eigenvalue(res.pca)
screen.plot<- fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 50))
screen.plot
var <- get_pca_var(res.pca)
var
ind <- get_pca_ind(res.pca)
ind
# Coordonnées
head(var$coord)
head(var$coord)
head(ind$coord)
# Cos2: qualité de répresentation
head(var$cos2, 13)
# Contributions aux composantes principales
head(var$contrib, 13)
res.var<-get_pca_var(res.pca)
res.var§coord
head(var$coord)
head(var$coord, 4)
fviz_pca_var(res.pca, col.var = "red")
head(var$cos2, 4)
library("corrplot")
corrplot(var$cos2, is.corr=FALSE)
head(var$cos2, 4)
head(ind$cos2)

library("corrplot")
corrplot(var$cos2, is.corr=FALSE)
fviz_cos2(res.pca, choice = "var", axes = 1:2)
fviz_pca_var(res.pca, col.var = "cos2",
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
             repel = TRUE # Évite le chevauchement de texte
)
corrplot(var$contrib, is.corr=FALSE)    
fviz_contrib(res.pca, choice = "var", axes = 1, top = 10)
fviz_contrib(res.pca, choice = "var", axes = 2, top = 10)
fviz_contrib(res.pca, choice = "var", axes = 1:2, top = 10)
fviz_pca_var(res.pca, col.var = "contrib",
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")
)
fviz_pca_ind (res.pca)
fviz_pca_ind (res.pca, col.ind = "cos2",
              gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
              repel = TRUE # Évite le chevauchement de texte
)
fviz_pca_ind (res.pca, pointsize = "cos2",
              pointshape = 21, fill = "#E7B800",
              repel = TRUE # Évite le chevauchement de texte
)
set.seed (12)
my.cont.var <- rnorm(23)
base.pca <- PCA(base [, - 5], graph = FALSE)
fviz_pca_ind(base.pca, col.ind = my.cont.var,
             gradient.cols = c("blue", "yellow", "red"),
             legend.title = "Cont.Var")

print(base)
fviz_pca_ind(base.pca,
             geom.ind = "point", # Montre les points seulement (mais pas le "text")
             col.ind = base$REGIONS, # colorer by groups
             palette = c("#00AFBB", "#E7B800", "#FC4E01", "#FC4E50", "#FC4E99"),
             addEllipses = TRUE, # Ellipses de concentration
             legend.title = "Groups"
)
base[, -5] <- apply(base[, -5], 2, as.numeric)

print(base)
base1.pca <- PCA(base [, - 22], graph = F)
fviz_pca_ind(base1.pca,
             geom.ind = "point", # Montre les points seulement (mais pas le "text")
             col.ind = base1$OUED, # colorer by groups
             palette = c("#00AFBB", "#E7B800", "#FC4E07"),
             addEllipses = TRUE, # Ellipses de concentration
             legend.title = "Groups"
)
fviz_pca_ind(base.pca, geom.ind = "point", col.ind = base$LAND, 
             palette = c("#00AFBB", "#E7B800", "#FC4E07"),
             addEllipses = TRUE, ellipse.type = "confidence",
             legend.title = "Groups"
)


set.seed (123)
my.cont.var <- rnorm(23)
# Colorer les individus par la variable continue
fviz_pca_ind(res.pca, col.ind = my.cont.var,
             gradient.cols = c("blue", "yellow", "red"),
             legend.title = "Cont.Var")
fviz_contrib(res.pca, choice = "ind", axes = 1:2)
head(ind$contrib)
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 50))




fviz_pca_biplot(res.pca, repel = TRUE,
                col.var = "#2E9FDF", # Couleur des variables
                col.ind = "#696969"  # Couleur des individues
)
fviz_pca_biplot (base1.pca,
                 col.ind = base1$OUED, palette = "jco",
                 addEllipses = TRUE, label = "var",
                 col.var = "black", repel = TRUE,
                 legend.title = "OUED")
fviz_pca_biplot(iris.pca, 
                geom.ind = "point",
                pointshape = 21,
                pointsize = 2.5,
                fill.ind = iris$Species,
                col.ind = "black",col.var = factor(c("sepal", "sepal", "petal", "petal")),
                
                legend.title = list(fill = "Species", color = "Clusters"),
                repel = TRUE    )+
  ggpubr::fill_palette("jco")+ ggpubr::color_palette("npg") 
summary(base)
res<-res<-PCA(base, quali.sup = 11:12)
summary(base)
base<-read.csv2("C:/Users/moste/OneDrive/Bureau/NMDS1.csv", row.names="PUITS", header=TRUE)
print(base)
res<-PCA(base, scale.unit = TRUE,ncp=5, graph = TRUE)
res.pca <- PCA(decathlon2.active, quali.sup =2, graph=FALSE)
PCA(base, quali.sup = 10:11, graph = TRUE)
base <- read.csv2("C:/Users/moste/OneDrive/Bureau/NMDS1.csv", row.names = "PUITS", header = TRUE)
base <- base[, !(colnames(base) %in% c("Region"))]  # Exclude the "Region" variable
res <- PCA(decathlon2.active, scale.unit = TRUE, ncp = 8, graph = TRUE)
print(base1)
dimdesc(res.pca)

summary(base1)
res.hcps<-HCPC(res)
names(res.hcps)
res.hcps$data.clust
res.hcps$desc.var
head(data.clust)
res <- PCA(base1,
               quanti.sup = 25, quali.sup = 26, graph=FALSE)
res.pca$quanti.sup
res.pca$quali.sup
fviz_pca_ind(res.pca, habillage = 26,
             addEllipses =TRUE, ellipse.type = "confidence",
             palette = "jco", repel = TRUE)

fviz_pca_var(res.pca)

print(base)
PCA(base, ind.sup = NULL, 
    quanti.sup = NULL, quali.sup = NULL, graph = TRUE)
res <- PCA(base, ind.sup = NULL, 
           quanti.sup = NULL, quali.sup = 25, graph = TRUE)
res.pca$quali.sup
fviz_pca_var(res.pca)
res <- PCA(decathlon2.active, quant.sup = 25, quali.sup = 26, graph = FALSE)

fviz_pca_var(res.pca)
res <- PCA(base, ind.sup = NULL, quanti.sup = NULL, quali.sup = "REGIONS", graph = TRUE)
res.pca$quali
fviz_pca_var(res.pca)

res.pca<-PCA(base, ind.sup = NULL, 
    quanti.sup = NULL, quali.sup = 25, graph = TRUE)
res.pca$quali.sup
fviz_pca_var(res.pca)
p <- fviz_pca_var(res.pca, col.ind.sup = "blue", repel = TRUE)
p <- fviz_add(p, res.pca$quali.sup$coord, color = "red")
p
fviz_pca_var(res.pca,
             col.var = "black", # Variables actives
)
imputed_base <- imputePCA(base[, -5])
base.pca <- PCA(imputed_base, graph = FALSE)
fviz_pca_ind(base.pca,
             geom.ind = "point",
             col.ind = imputed_base$Region,
             palette = c("#00AFBB", "#E7B800", "#FC4E01", "#FC4E50", "#FC4E99"),
             addEllipses = TRUE,
             legend.title = "Groups"
)
res.pca <- PCA(base1,  
               quanti.sup = 25, quali.sup = 26, graph=FALSE)
res.pca$quanti.sup
fviz_pca_var(res.pca)

res.pca$quali
fviz_pca_ind(res.pca, habillage = 26,
             palette = "jco", repel = TRUE)
summary(base1)
res <- PCA(base1, quanti.sup = 25, quali.sup = 26, ncp=8)
summary(base1)
res.hcpc <- HCPC(res)
names(res.hcps)
res.hcps$data.clust
res.hcps$desc.var
res.hcps$desc.axes
res.hcps$desc.ind
res.hcps <- HCPC(res,consol=FALSE)
